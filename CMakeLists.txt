cmake_minimum_required(VERSION 3.20)
project(StrawberryCodec)
set(CMAKE_CXX_STANDARD 23)
find_package(PkgConfig REQUIRED)


message(STATUS "Building FFMPEG")
execute_process(
		COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/scripts/build_ffmpeg.sh ${CMAKE_CURRENT_BINARY_DIR}/Vendor/FFMPEG/src ${CMAKE_CURRENT_BINARY_DIR}/Vendor/FFMPEG/install
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
		COMMAND_ERROR_IS_FATAL ANY
)


set(ENV{PKG_CONFIG_PATH} ${CMAKE_CURRENT_BINARY_DIR}/Vendor/FFMPEG/install/lib/pkgconfig)
pkg_check_modules(FFMPEG REQUIRED
		libavcodec
		libavdevice
		libavfilter
		libavformat
		libavutil
		libswresample
		libswscale
)


find_path(SODIUM_INCLUDE_DIR REQUIRED NAMES sodium.h
		HINTS /usr/local/include)
find_library(SODIUM_LIBRARY REQUIRED
		NAMES libsodium.a
		HINTS /usr/local/lib
)


if (NOT TARGET StrawberryCore AND EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/../Core AND IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../Core)
	add_subdirectory(../Core ${CMAKE_CURRENT_BINARY_DIR}/Core)
endif ()


add_library(StrawberryCodec STATIC
		include/Codec/Audio/Decoder.hpp
		include/Codec/Audio/Encoder.hpp
		include/Codec/Audio/Frame.hpp
		include/Codec/Audio/FrameFormat.hpp
		include/Codec/Audio/FrameResizer.hpp
		include/Codec/Audio/Mixer.hpp
		include/Codec/Audio/Playlist.hpp
		include/Codec/Audio/Resampler.hpp
		include/Codec/CodecParameters.hpp
		include/Codec/Constants.hpp
		include/Codec/MediaFile.hpp
		include/Codec/MediaStream.hpp
		include/Codec/Muxer.hpp
		include/Codec/Packet.hpp
		include/Codec/SodiumEncrypter.hpp
		src/Audio/Decoder.cpp
		src/Audio/Encoder.cpp
		src/Audio/Frame.cpp
		src/Audio/FrameFormat.cpp
		src/Audio/FrameResizer.cpp
		src/Audio/Mixer.cpp
		src/Audio/Playlist.cpp
		src/Audio/Resampler.cpp
		src/MediaFile.cpp
		src/MediaStream.cpp
		src/Muxer.cpp
		src/Packet.cpp
		src/SodiumEncrypter.cpp
)


target_include_directories(StrawberryCodec PUBLIC include ${FFMPEG_INCLUDE_DIRS} ${SODIUM_INCLUDE_DIR})
target_link_libraries(StrawberryCodec PUBLIC StrawberryCore ${FFMPEG_LINK_LIBRARIES} ${SODIUM_LIBRARY})
target_link_directories(StrawberryCodec PUBLIC ${FFMPEG_LIBRARY_DIRS})


# FFMPEG Compile Flags
if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	# Linker arguments generated by pkg-config for FFMPEG
	# pkg-config does not pass these arguments in nicely, so we do it manually.
	target_link_libraries(StrawberryCodec PRIVATE "-framework Security" "-framework VideoToolbox" "-framework AudioToolbox" "-framework CoreFoundation" "-framework CoreMedia" "-framework CoreVideo" "-framework CoreServices" "-framework CoreImage" "-framework CoreGraphics" "-framework VideoToolbox" "-framework OpenGL" "-framework Metal" "-framework Foundation" "-framework AppKit")
endif ()


add_executable(StrawberryCodecTest test/Main.cpp)
target_link_libraries(StrawberryCodecTest PRIVATE StrawberryCodec)